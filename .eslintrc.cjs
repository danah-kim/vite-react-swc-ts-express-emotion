module.exports = {
    root: true,
    env: {
        es6: true,
        browser: true,
        es2021: true,
        node: true,
    },
    extends: [
        'standard-with-typescript',
        'plugin:react/recommended',
        'plugin:react-hooks/recommended',
        'plugin:import/typescript',
        'plugin:prettier/recommended',
        'plugin:@typescript-eslint/recommended',
    ],
    overrides: [],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        project: './tsconfig.json',
        ecmaVersion: 'latest',
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
        jsx: true,
        useJSXTextNode: true,
    },
    plugins: [
        'react',
        'react-hooks',
        'import',
        'prettier',
        '@typescript-eslint',
        'eslint-plugin-simple-import-sort',
        'unused-imports',
        '@emotion',
    ],
    settings: {
        react: {version: 'detect'},
    },
    rules: {
        'react/no-unescaped-entities': 'off',
        'react/self-closing-comp': [
            'error',
            {
                component: true,
                html: true,
            },
        ],
        'react/jsx-first-prop-new-line': 'error',
        quotes: ['error', 'single'],
        'eol-last': 'error',
        semi: 'off',
        'simple-import-sort/imports': 'error',
        'simple-import-sort/exports': 'error',
        'no-unused-vars': ['error', {vars: 'all', args: 'none', ignoreRestSiblings: false}],
        'unused-imports/no-unused-imports-ts': ['error'],
        'prettier/prettier': 'error',
        'no-implicit-coercion': 'error',
        'no-undef': 'off',
        '@typescript-eslint/indent': 'off',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        'no-extra-boolean-cast': 'off',
        'getter-return': 'warn',
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-empty-interface': 'off',
        '@typescript-eslint/no-parameter-properties': 'off',
        'no-restricted-imports': [
            'error',
            {
                paths: [
                    {
                        name: 'util',
                        importNames: ['isArray'],
                        message: '`Array.isArray`를 대신 사용해주세요!',
                    },
                ],
            },
        ],
        'no-async-promise-executor': 'warn',
        '@typescript-eslint/prefer-as-const': 'warn',
        '@typescript-eslint/no-non-null-asserted-optional-chain': 'warn',
        '@typescript-eslint/ban-types': 'warn',
        '@typescript-eslint/no-inferrable-types': 'warn',
        '@typescript-eslint/no-empty-function': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/array-type': ['error', {default: 'array-simple'}],
        '@typescript-eslint/no-unused-vars': ['error', {ignoreRestSiblings: true}],
        '@typescript-eslint/member-ordering': [
            'error',
            {
                default: [
                    'public-static-field',
                    'private-static-field',
                    'public-instance-field',
                    'private-instance-field',
                    'public-constructor',
                    'private-constructor',
                    'public-instance-method',
                    'private-instance-method',
                ],
            },
        ],
        'no-warning-comments': [
            'warn',
            {
                terms: ['TODO', 'FIXME', 'XXX', 'BUG'],
                location: 'anywhere',
            },
        ],
        'prefer-const': 'error',
        'no-var': 'error',
        curly: ['error', 'all'],
        eqeqeq: ['error', 'always', {null: 'ignore'}],
        'import/no-duplicates': 'error',
        'react/prop-types': 'off',
        'react/display-name': 'off',
        'react-hooks/rules-of-hooks': 'error',
        'react-hooks/exhaustive-deps': 'error',
        'react/jsx-no-target-blank': 'error',
        '@typescript-eslint/no-var-requires': 'warn',
        'react/react-in-jsx-scope': 'off',
        'react/no-unknown-property': ['error', {ignore: ['css']}],
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/strict-boolean-expressions': 'off',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/no-misused-promises': 'off'
    },
};
